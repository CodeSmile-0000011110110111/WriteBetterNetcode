@startuml

!theme blueprint
hide empty description

title FSM: NetworkState

state "Initializing" as state0
state state0 {
	state "Init Complete" as state0_trans0
	state state0_trans0 #line.dotted {
		state0_trans0 : IsNetworkOffline | ""True""
		state0_trans0 : ....
		state0_trans0 : UnityServicesInit
	}
}
state "Offline" as state1
state state1 {
	state "StartWithoutRelay" as state1_trans0
	state state1_trans0 #line.dotted {
		state1_trans0 : NOT(IsRelayEnabled) | ""True""
		state1_trans0 : ....
	}
	state "StartWithRelay" as state1_trans1
	state state1_trans1 #line.dotted {
		state1_trans1 : IsRelayEnabled | ""False""
		state1_trans1 : ....
		state1_trans1 : SignInAnonymously
	}
}
state "SignIn" as state2
state state2 {
	state "SignedIn" as state2_trans0
	state state2_trans0 #line.dotted {
		state2_trans0 : IsSignedIn | ""True""
		state2_trans0 : ....
	}
}
state "RelayAllocation" as state3
state state3 {
}
state "Starting" as state4
state state4 {
	state "Start Server" as state4_trans0
	state state4_trans0 #line.dotted {
		state4_trans0 : IsNetcodeRole | ""False""
		state4_trans0 : ....
		state4_trans0 : ApplyTransportConfig
		state4_trans0 : NetworkStartServer
	}
	state "Start Host" as state4_trans1
	state state4_trans1 #line.dotted {
		state4_trans1 : IsNetcodeRole | ""False""
		state4_trans1 : ....
		state4_trans1 : ApplyTransportConfig
		state4_trans1 : NetworkStartHost
	}
	state "Start Client" as state4_trans2
	state state4_trans2 #line.dotted {
		state4_trans2 : IsNetcodeRole | ""False""
		state4_trans2 : ....
		state4_trans2 : ApplyTransportConfig
		state4_trans2 : NetworkStartClient
	}
}
state "ServerStarting" as state5
state state5 {
	state "Server started" as state5_trans0
	state state5_trans0 #line.dotted {
		state5_trans0 : IsLocalServerStarted | ""False""
		state5_trans0 : ....
	}
}
state "ServerStarted" as state6
state state6 {
	state "Server stopping" as state6_trans0
	state state6_trans0 #line.dotted {
		state6_trans0 : OR(NOT(IsLocalServerStarted), IsNetcodeRole) | ""True""
		state6_trans0 : ....
		state6_trans0 : NetworkStop
	}
}
state "ClientStarting" as state7
state state7 {
	state "Client started" as state7_trans0
	state state7_trans0 #line.dotted {
		state7_trans0 : IsLocalClientStarted | ""False""
		state7_trans0 : ....
	}
}
state "ClientStarted" as state8
state state8 {
	state "Client connected" as state8_trans0
	state state8_trans0 #line.dotted {
		state8_trans0 : IsLocalClientConnected | ""False""
		state8_trans0 : ....
	}
	state "Client stopping" as state8_trans1
	state state8_trans1 #line.dotted {
		state8_trans1 : OR(NOT(IsLocalClientStarted), IsNetcodeRole) | ""True""
		state8_trans1 : ....
		state8_trans1 : NetworkStop
	}
}
state "ClientConnected" as state9
state state9 {
	state "Client disconnected" as state9_trans0
	state state9_trans0 #line.dotted {
		state9_trans0 : NOT(IsLocalClientConnected) | ""True""
		state9_trans0 : ....
	}
	state "Client stopping" as state9_trans1
	state state9_trans1 #line.dotted {
		state9_trans1 : OR(NOT(IsLocalClientStarted), IsNetcodeRole) | ""True""
		state9_trans1 : ....
		state9_trans1 : NetworkStop
	}
}
state "ClientDisconnected" as state10
state state10 {
	state "Client stopping" as state10_trans0
	state state10_trans0 #line.dotted {
		state10_trans0 : OR(NOT(IsLocalClientStarted), IsNetcodeRole) | ""True""
		state10_trans0 : ....
		state10_trans0 : NetworkStop
	}
}
state "Stopping" as state11
state state11 {
	state "Network stopping" as state11_trans0
	state state11_trans0 #line.dotted {
		state11_trans0 : IsNetworkOffline | ""True""
		state11_trans0 : ....
		state11_trans0 : SetNetcodeRole
	}
}


[*] -> state0
state0 --> state1 : Init Complete
state1 --> state4 : StartWithoutRelay
state1 --> state2 : StartWithRelay
state2 --> state4 : SignedIn
state4 --> state5 : Start Server
state4 --> state5 : Start Host
state4 --> state7 : Start Client
state5 --> state6 : Server started
state6 --> state11 : Server stopping
state7 --> state8 : Client started
state8 --> state9 : Client connected
state8 --> state11 : Client stopping
state9 --> state10 : Client disconnected
state9 --> state11 : Client stopping
state10 --> state11 : Client stopping
state11 --> state1 : Network stopping


@enduml