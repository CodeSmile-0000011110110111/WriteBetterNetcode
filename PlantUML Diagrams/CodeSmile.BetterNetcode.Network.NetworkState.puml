@startuml

!theme blueprint
hide empty description

title FSM: NetworkState

state "Initializing" as state0
state state0 {
	state "Init Complete" as state0_trans0
	state state0_trans0 #line.dotted {
		state0_trans0 : IsNetworkOffline | ""True""
		state0_trans0 : ....
		state0_trans0 : UnityServicesInit
	}
}
state "Offline" as state1
state state1 {
	state "SignInAnonymously" as state1_trans0
	state state1_trans0 #line.dotted {
		state1_trans0 : IsNotSignedIn | ""False""
		state1_trans0 : m_NetworkRole != 0 | ""False""
		state1_trans0 : ....
		state1_trans0 : SignInAnonymously
	}
	state "Start Server" as state1_trans1
	state state1_trans1 #line.dotted {
		state1_trans1 : IsSignedIn | ""False""
		state1_trans1 : m_NetworkRole == 1 | ""False""
		state1_trans1 : ....
		state1_trans1 : ApplyTransportConfig
		state1_trans1 : NetworkStartServer
	}
	state "Start Host" as state1_trans2
	state state1_trans2 #line.dotted {
		state1_trans2 : IsSignedIn | ""False""
		state1_trans2 : m_NetworkRole == 2 | ""False""
		state1_trans2 : ....
		state1_trans2 : ApplyTransportConfig
		state1_trans2 : NetworkStartHost
	}
	state "Start Client" as state1_trans3
	state state1_trans3 #line.dotted {
		state1_trans3 : IsSignedIn | ""False""
		state1_trans3 : m_NetworkRole == 3 | ""False""
		state1_trans3 : ....
		state1_trans3 : ApplyTransportConfig
		state1_trans3 : NetworkStartClient
	}
}
state "ServerStarting" as state2
state state2 {
	state "Server started" as state2_trans0
	state state2_trans0 #line.dotted {
		state2_trans0 : IsLocalServerStarted | ""False""
		state2_trans0 : ....
	}
}
state "ServerStarted" as state3
state state3 {
	state "Server stopping" as state3_trans0
	state state3_trans0 #line.dotted {
		state3_trans0 : OR(NOT(IsLocalServerStarted), m_NetworkRole == 0) | ""True""
		state3_trans0 : ....
		state3_trans0 : NetworkStop
	}
}
state "ClientStarting" as state4
state state4 {
	state "Client started" as state4_trans0
	state state4_trans0 #line.dotted {
		state4_trans0 : IsLocalClientStarted | ""False""
		state4_trans0 : ....
	}
}
state "ClientStarted" as state5
state state5 {
	state "Client connected" as state5_trans0
	state state5_trans0 #line.dotted {
		state5_trans0 : IsLocalClientConnected | ""False""
		state5_trans0 : ....
	}
	state "Client stopping" as state5_trans1
	state state5_trans1 #line.dotted {
		state5_trans1 : OR(NOT(IsLocalClientStarted), m_NetworkRole == 0) | ""True""
		state5_trans1 : ....
		state5_trans1 : NetworkStop
	}
}
state "ClientConnected" as state6
state state6 {
	state "Client disconnected" as state6_trans0
	state state6_trans0 #line.dotted {
		state6_trans0 : NOT(IsLocalClientConnected) | ""True""
		state6_trans0 : ....
	}
	state "Client stopping" as state6_trans1
	state state6_trans1 #line.dotted {
		state6_trans1 : OR(NOT(IsLocalClientStarted), m_NetworkRole == 0) | ""True""
		state6_trans1 : ....
		state6_trans1 : NetworkStop
	}
}
state "ClientDisconnected" as state7
state state7 {
	state "Client stopping" as state7_trans0
	state state7_trans0 #line.dotted {
		state7_trans0 : OR(NOT(IsLocalClientStarted), m_NetworkRole == 0) | ""True""
		state7_trans0 : ....
		state7_trans0 : NetworkStop
	}
}
state "Stopping" as state8
state state8 {
	state "Network stopping" as state8_trans0
	state state8_trans0 #line.dotted {
		state8_trans0 : IsNetworkOffline | ""True""
		state8_trans0 : ....
		state8_trans0 : m_NetworkRole = 0
	}
}


[*] -> state0
state0 --> state1 : Init Complete
state1 --> state2 : Start Server
state1 --> state2 : Start Host
state1 --> state4 : Start Client
state2 --> state3 : Server started
state3 --> state8 : Server stopping
state4 --> state5 : Client started
state5 --> state6 : Client connected
state5 --> state8 : Client stopping
state6 --> state7 : Client disconnected
state6 --> state8 : Client stopping
state7 --> state8 : Client stopping
state8 --> state1 : Network stopping


@enduml